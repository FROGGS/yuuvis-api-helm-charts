apiVersion: v1
data:
  keycloakAddRoleToClient.bash: |-
    KEYCLOAK_USER=keycloak
    KEYCLOAK_PASSWORD=optimal
    REALM=yuuvistest
    REALM_2=testyuuvis
    CLIENT_NAME=yuuvis-authentication-service
    ROLE_TO_ADD=YUUVIS_DEFAULT
    KCADM=/opt/jboss/keycloak/bin/kcadm.sh
    TSPWD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 23 ; echo '')
    KEYCLOAK_HTTP_ADDRESS=http://keycloak-http.{{.Release.Namespace}}

    echo "work around for https://issues.jboss.org/browse/KEYCLOAK-4923"
    echo "add cert to java truststore"

    mkdir /opt/jboss/keycloak/custom/
        
    keytool -importkeystore -noprompt \
      -srckeystore "${JAVA_HOME}/jre/lib/security/cacerts" \
      -srcstoretype jks \
      -destkeystore "/opt/jboss/keycloak/custom/cacerts" \
      -storepass "${TSPWD}" -srcstorepass "changeit" 
    
    /usr/bin/keytool -import -trustcacerts -keystore /opt/jboss/keycloak/custom/cacerts -storepass ${TSPWD} -noprompt -alias keycloak-https -file /var/run/secrets/yuuvis/tls.crt
    
    export KC_OPTS="-Djavax.net.ssl.trustStore=/opt/jboss/keycloak/custom/cacerts -Djavax.net.ssl.trustStorePassword=${TSPWD}"
        
    until $(curl --connect-timeout 5 --output /dev/null --silent --head --fail --cacert /var/run/secrets/yuuvis/tls.crt ${KEYCLOAK_HTTP_ADDRESS}); do
        echo waiting for keycloak
        sleep 11;
    done

    sleep 11;

    echo "obtaining client id for $CLIENT_NAME in $REALM"

    CLIENT_ID=$(${KCADM} get clients --server ${KEYCLOAK_HTTP_ADDRESS}/auth --realm master --user "${KEYCLOAK_USER}" --password "${KEYCLOAK_PASSWORD}" -r ${REALM} -q clientId=${CLIENT_NAME} -F id --format csv --noquotes)

    echo "$CLIENT_NAME id is $CLIENT_ID"

    echo "obtaining service account for $CLIENT_NAME"

    SERVICE_ACCOUNT_USERNAME=$(${KCADM} get --server ${KEYCLOAK_HTTP_ADDRESS}/auth --realm master --user "${KEYCLOAK_USER}" --password "${KEYCLOAK_PASSWORD}" -r ${REALM} clients/${CLIENT_ID}/service-account-user -F username --format csv --noquotes)

    echo "service account is $SERVICE_ACCOUNT_USERNAME"
    echo "adding role $ROLE_TO_ADD to $CLIENT_NAME"

    ${KCADM} add-roles -r ${REALM} --server ${KEYCLOAK_HTTP_ADDRESS}/auth --user "${KEYCLOAK_USER}" --password "${KEYCLOAK_PASSWORD}" --realm master --uusername ${SERVICE_ACCOUNT_USERNAME} --rolename ${ROLE_TO_ADD}
    
    echo "obtaining client id for $CLIENT_NAME in $REALM_2"

    CLIENT_ID_2=$(${KCADM} get clients --server ${KEYCLOAK_HTTP_ADDRESS}/auth --realm master --user "${KEYCLOAK_USER}" --password "${KEYCLOAK_PASSWORD}" -r ${REALM_2} -q clientId=${CLIENT_NAME} -F id --format csv --noquotes)

    echo "$CLIENT_NAME id is $CLIENT_ID_2"

    echo "obtaining service account for $CLIENT_NAME"

    SERVICE_ACCOUNT_USERNAME_2=$(${KCADM} get --server ${KEYCLOAK_HTTP_ADDRESS}/auth --realm master --user "${KEYCLOAK_USER}" --password "${KEYCLOAK_PASSWORD}" -r ${REALM_2} clients/${CLIENT_ID_2}/service-account-user -F username --format csv --noquotes)

    echo "service account is $SERVICE_ACCOUNT_USERNAME_2"
    echo "adding role $ROLE_TO_ADD to $CLIENT_NAME"

    ${KCADM} add-roles -r ${REALM_2} --server ${KEYCLOAK_HTTP_ADDRESS}/auth --user "${KEYCLOAK_USER}" --password "${KEYCLOAK_PASSWORD}" --realm master --uusername ${SERVICE_ACCOUNT_USERNAME_2} --rolename ${ROLE_TO_ADD}
kind: ConfigMap
metadata:
  name: keycloakaddroletoclient
