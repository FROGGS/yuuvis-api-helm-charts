imageCredentials:
  dockeryuuvisorg:
    registry: docker.yuuvis.org
    username: PLACEUSERNAMEHERE
    password: PLACEPASSWORDHERE 

yuuvis:
  # !!! Change before running
  # replace the value with the namespace you intent to use for the yuuvis API services
  # this chart creates a k8s job that generatey a selfsigned certificate and deploys the
  # crt file as a secret to the given namespace
  namespaces: 
    yuuvis: yuuvis
    infrastructure: infrastructure
  authentication:
    # we assume test deployment in minikube
    # ip is the ip of the vm minikube creates
    # to get the ip: minikube ip
    ip: 192.168.99.100
    port: 30080
  labels:
    app: yuuvis
    
elasticsearch:
  image: docker.yuuvis.org/yuuvis/elasticsearch:2019-11-28
  imagePullPolicy: IfNotPresent
  imagePullSecret: dockeryuuvisorg
  storage: 100Mi
  storageClassName: default
  javaOpts: -Xms1024m -Xmx1024m
  replicas: 1
  port: 9300
  targetPort: 9300
  port2: 9200
  targetPort2: 9200
  # value for the elastic parameter uster.initial_master_nodes
  # if more than 1 node should be used, adjust initial master nodes value
  initial_master_nodes: elasticsearch-0

postgresql:
  fullnameOverride: postgresql
  postgresqlPassword: optimal
  persistence:
    storageClass: default
    size: 100Mi
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  initdbScriptsConfigMap: postgresql-initdb
  postgresqlExtendedConf: {"max_connections": "400", "shared_buffers": "128MB", "effective_cache_size": "384MB"}
  initdb:
    database1: yuuvis
    user1: yuuvis
    password1: optimal
    database2: keycloak
    user2: keycloak
    password2: optimal


rabbitmq:
  fullnameOverride: rabbitmq
  rabbitmq:
    username: rodger
    password: optimal
    extraPlugins: "rabbitmq_auth_backend_ldap rabbitmq_amqp1_0 rabbitmq_prometheus"
    extraConfiguration: |-
      #disk_free_limit.absolute = 50MB
      #management.load_definitions = /app/load_definition.json
      amqp1_0.default_user = rodger
  persistence:
    enabled: true
    storageClass: default
    size: 100Mi
git:
  protocol: http
  reponame: yuuvis-config
  username: yuuvis
  password: optimal
gogs:
  useCustomDeployment: true
  image: gogs/gogs:0.11.86
  imagePullPolicy: IfNotPresent
  initcontainer:
    image: docker.yuuvis.org/yuuvis/helper/init-helper:latest
    secret: dockeryuuvisorg
  persistence:
    size: 500Mi
    storageClass: default
  username: yuuvis
  password: optimal
  port: 80
  targetPort: 3000
  containerPort: 3000
minio:
  fullnameOverride: minio
  accessKey: "PLACE_STORAGE_CREDENTIALS_ACCOUNT_HERE"
  secretKey: "PLACE_STORAGE_CREDENTIALS_SECRET_HERE"
  persistence:
    storageClass: default
    size: 10Gi
  resources: {}
  
keycloak:
  fullnameOverride: keycloak
  targetPort: 8443
  nodePort: 30111
  keycloak:
    image:
      tag: 7.0.0
    livenessProbe: |
      httpGet:
        path: {{ if ne .Values.keycloak.basepath "" }}/{{ .Values.keycloak.basepath }}{{ end }}/
        port: http
      initialDelaySeconds: 600
      timeoutSeconds: 5
    username: keycloak
    password: "optimal"
    persistence:
      dbVendor: postgres
      dbName: keycloak
      dbHost: "postgresql"
      dbPort: 5432
      dbUser: keycloak
      dbPassword: "optimal"
    extraArgs: "-Dkeycloak.import=/realm/yuuvistest.json,/realm/testyuuvis.json"
    extraVolumes: |
      - name: realm-config
        configMap:
          name: realmconfigmap
      - name: keycloak-tls-localhost
        secret:
          defaultMode: 420
          secretName: keycloak-selfsigned-tls-secret
    extraVolumeMounts: | 
      - name: realm-config
        mountPath: "/realm/"
        readOnly: true
      - name: keycloak-tls-localhost
        mountPath: "/etc/x509/https/"
    extraEnv: |
      - name: PROXY_ADDRESS_FORWARDING
        value: "true"
      - name: POSTGRES_PORT
        value: "5432"


redis:
  fullnameOverride: redis
  ## Cluster settings
  cluster:
    enabled: false
  usePassword: false
  master:
    livenessProbe:
      initialDelaySeconds: 600
    persistence:
      enabled: false
      storageClass: default
      size: 50Mi
